# Generated by IBM TransformationAdvisor
# Optimized for Kubernetes deployment
FROM icr.io/appcafe/ibm-semeru-runtimes:open-8-jdk-focal AS build-stage

# Install dependencies in single layer and clean up
RUN apt-get update && \
    apt-get install -y maven unzip && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy only necessary files first (better layer caching)
COPY ./pom.xml /project/
COPY ./src /project/src/
WORKDIR /project

# Build application
RUN mvn clean package -DskipTests && \
    mkdir -p /config/apps /sharedlibs && \
    cp ./src/main/liberty/config/* /config/ && \
    cp ./target/*.*ar /config/apps/ && \
    if [ -d "./src/main/liberty/lib" ] && [ "$(ls -A ./src/main/liberty/lib)" ]; then \
        cp -r ./src/main/liberty/lib/* /sharedlibs/; \
    fi

# Runtime stage
FROM icr.io/appcafe/websphere-liberty:kernel-java8-openj9-ubi

# Create non-root user if needed
USER 1001

# Create necessary directories
RUN mkdir -p /opt/ibm/wlp/usr/shared/config/lib/global

# Copy application artifacts
COPY --chown=1001:0 --from=build-stage /config/ /config/
COPY --chown=1001:0 --from=build-stage /sharedlibs/ /opt/ibm/wlp/usr/shared/config/lib/global/

# Configure Liberty features
RUN features.sh

# Configure server and optimize runtime
RUN configure.sh

# Health check for Kubernetes
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:9080/health || exit 1

# Expose ports
EXPOSE 9080 9443

# Set JVM options for containerized environment
ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC"

# Start server
CMD ["/opt/ibm/wlp/bin/server", "run", "defaultServer"]
